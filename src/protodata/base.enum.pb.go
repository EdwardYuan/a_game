// Code generated by protoc-gen-go.
// source: base.enum.proto
// DO NOT EDIT!

package protodata

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// 系统执行状态码
type StatusCode int32

const (
	StatusCode_OK            StatusCode = 1
	StatusCode_INVALID_TOKEN StatusCode = 2
)

var StatusCode_name = map[int32]string{
	1: "OK",
	2: "INVALID_TOKEN",
}
var StatusCode_value = map[string]int32{
	"OK":            1,
	"INVALID_TOKEN": 2,
}

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}
func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (x *StatusCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusCode_value, data, "StatusCode")
	if err != nil {
		return err
	}
	*x = StatusCode(value)
	return nil
}

type WebErrorType int32

const (
	WebErrorType_Error_Socket_TIME_OUT           WebErrorType = 1
	WebErrorType_Error_Socket_CONNECTION_FAILURE WebErrorType = 2
	WebErrorType_Error_Socket_UNKNOWN            WebErrorType = 3
	WebErrorType_Error_Login_Failure             WebErrorType = 4
	WebErrorType_Error_Other                     WebErrorType = 5
)

var WebErrorType_name = map[int32]string{
	1: "Error_Socket_TIME_OUT",
	2: "Error_Socket_CONNECTION_FAILURE",
	3: "Error_Socket_UNKNOWN",
	4: "Error_Login_Failure",
	5: "Error_Other",
}
var WebErrorType_value = map[string]int32{
	"Error_Socket_TIME_OUT":           1,
	"Error_Socket_CONNECTION_FAILURE": 2,
	"Error_Socket_UNKNOWN":            3,
	"Error_Login_Failure":             4,
	"Error_Other":                     5,
}

func (x WebErrorType) Enum() *WebErrorType {
	p := new(WebErrorType)
	*p = x
	return p
}
func (x WebErrorType) String() string {
	return proto.EnumName(WebErrorType_name, int32(x))
}
func (x *WebErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebErrorType_value, data, "WebErrorType")
	if err != nil {
		return err
	}
	*x = WebErrorType(value)
	return nil
}

func init() {
	proto.RegisterEnum("protodata.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("protodata.WebErrorType", WebErrorType_name, WebErrorType_value)
}
