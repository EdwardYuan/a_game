// Code generated by protoc-gen-go.
// source: command.interface.proto
// DO NOT EDIT!

package protodata

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// ************************************协议包************************************
type CommandRequest struct {
	CmdId            *int32  `protobuf:"varint,2,req,name=cmdId" json:"cmdId,omitempty"`
	CmdIndex         *int32  `protobuf:"varint,3,opt,name=cmdIndex" json:"cmdIndex,omitempty"`
	TokenStr         *string `protobuf:"bytes,4,req,name=tokenStr" json:"tokenStr,omitempty"`
	SerializedString *string `protobuf:"bytes,5,opt,name=serializedString" json:"serializedString,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}

func (m *CommandRequest) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

func (m *CommandRequest) GetCmdIndex() int32 {
	if m != nil && m.CmdIndex != nil {
		return *m.CmdIndex
	}
	return 0
}

func (m *CommandRequest) GetTokenStr() string {
	if m != nil && m.TokenStr != nil {
		return *m.TokenStr
	}
	return ""
}

func (m *CommandRequest) GetSerializedString() string {
	if m != nil && m.SerializedString != nil {
		return *m.SerializedString
	}
	return ""
}

type CommandResponse struct {
	Status           *StatusData `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	CmdId            *int32      `protobuf:"varint,2,req,name=cmdId" json:"cmdId,omitempty"`
	CmdIndex         *int32      `protobuf:"varint,3,req,name=cmdIndex" json:"cmdIndex,omitempty"`
	TokenStr         *string     `protobuf:"bytes,4,req,name=tokenStr" json:"tokenStr,omitempty"`
	SerializedString *string     `protobuf:"bytes,5,req,name=serializedString" json:"serializedString,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}

func (m *CommandResponse) GetStatus() *StatusData {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CommandResponse) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

func (m *CommandResponse) GetCmdIndex() int32 {
	if m != nil && m.CmdIndex != nil {
		return *m.CmdIndex
	}
	return 0
}

func (m *CommandResponse) GetTokenStr() string {
	if m != nil && m.TokenStr != nil {
		return *m.TokenStr
	}
	return ""
}

func (m *CommandResponse) GetSerializedString() string {
	if m != nil && m.SerializedString != nil {
		return *m.SerializedString
	}
	return ""
}

type StatusData struct {
	SCode            *StatusCode `protobuf:"varint,1,req,name=sCode,enum=protodata.StatusCode" json:"sCode,omitempty"`
	SStr             *string     `protobuf:"bytes,2,opt,name=sStr" json:"sStr,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *StatusData) Reset()         { *m = StatusData{} }
func (m *StatusData) String() string { return proto.CompactTextString(m) }
func (*StatusData) ProtoMessage()    {}

func (m *StatusData) GetSCode() StatusCode {
	if m != nil && m.SCode != nil {
		return *m.SCode
	}
	return StatusCode_OK
}

func (m *StatusData) GetSStr() string {
	if m != nil && m.SStr != nil {
		return *m.SStr
	}
	return ""
}

// *************************************错误信息**********************************
type ErrorResponse struct {
	WebErrorType     *WebErrorType `protobuf:"varint,1,req,name=webErrorType,enum=protodata.WebErrorType" json:"webErrorType,omitempty"`
	SStr             *string       `protobuf:"bytes,2,opt,name=sStr" json:"sStr,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}

func (m *ErrorResponse) GetWebErrorType() WebErrorType {
	if m != nil && m.WebErrorType != nil {
		return *m.WebErrorType
	}
	return WebErrorType_Error_Socket_TIME_OUT
}

func (m *ErrorResponse) GetSStr() string {
	if m != nil && m.SStr != nil {
		return *m.SStr
	}
	return ""
}

func init() {
}
